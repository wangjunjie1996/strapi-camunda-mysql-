(window.webpackJsonp=window.webpackJsonp||[]).push([[1015],{1434:function(t,s,e){"use strict";e.r(s);var v=e(9),o=Object(v.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"strapi-插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#strapi-插件"}},[t._v("#")]),t._v(" Strapi 插件")]),t._v(" "),e("p",[t._v("在 Strapi，你可以在你的 "),e("code",[t._v("node_modules")]),t._v(" 中安装插件。这允许简单的更新和尊重最佳实践。要自定义那些已安装的插件，您可以在 "),e("code",[t._v("/extensions")]),t._v(" 目录中工作。它包含所有插件的可定制文件。")]),t._v(" "),e("p",[t._v("一些插件会在这些文件夹中创建文件，这样你就可以修改它们了。您还可以手动创建某些文件以添加某些自定义配置。")]),t._v(" "),e("p",[t._v("扩展文件夹结构:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("extensions/")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("**")]),t._v(": 插件 Id\n"),e("ul",[e("li",[e("code",[t._v("admin")]),t._v(": 你可以通过创建一个同名的文件来扩展插件的管理，这样做会覆盖原来的文件.")]),t._v(" "),e("li",[e("code",[t._v("config")]),t._v(": 您可以通过添加带有自定义配置的 settings.json 文件来扩展插件的配置.")]),t._v(" "),e("li",[e("code",[t._v("models")]),t._v(": 包含您已经覆盖的插件模型(例如，当您向用户模型添加关系时).")]),t._v(" "),e("li",[e("code",[t._v("controllers")]),t._v(": 可以通过创建名称相同的控制器并覆盖某些方法来扩展插件的控制器.")]),t._v(" "),e("li",[e("code",[t._v("services")]),t._v(": 你可以通过创建相同名称的服务和覆盖某些方法来扩展插件的服务.")])])])])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("在使用 "),e("strong",[t._v("extensions")]),t._v(" 时，每当升级 strapi 版本时，都需要更新代码。不更新你的 "),e("strong",[t._v("extensions")]),t._v(" 并将其与存储库中的新变化进行比较，可能会以我们在 "),e("RouterLink",{attrs:{to:"/developer-docs/latest/update-migration-guides/migration-guides.html"}},[t._v("迁移指南")]),t._v(" 中无法预料的方式破坏你的应用程序。")],1)]),t._v(" "),e("PluginsLinks")],1)}),[],!1,null,null,null);s.default=o.exports}}]);