(window.webpackJsonp=window.webpackJsonp||[]).push([[1062],{1484:function(t,e,a){"use strict";a.r(e);var s=a(9),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"templates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#templates"}},[t._v("#")]),t._v(" Templates")]),t._v(" "),a("p",[t._v("A template is a pre-made Strapi configuration designed for a specific use case. It allows you to quickly bootstrap a custom Strapi app.")]),t._v(" "),a("p",[t._v("Here are some things a template may configure for you:")]),t._v(" "),a("ul",[a("li",[t._v("Collection types and single types")]),t._v(" "),a("li",[t._v("Components and dynamic zones")]),t._v(" "),a("li",[t._v("Plugins to install, or custom plugins")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("Templates and starters are not the same thing:")]),t._v(" "),a("ul",[a("li",[t._v("A "),a("em",[t._v("template")]),t._v(" is a pre-made Strapi configuration. Note that it's only a configuration, not a configured application. That's because it cannot be run on its own, since it lacks many files, like database configs or the "),a("code",[t._v("package.json")]),t._v(". A template is only useful once applied on top of a default Strapi app via the CLI.")]),t._v(" "),a("li",[t._v("A "),a("em",[t._v("starter")]),t._v(" is a pre-made frontend application that consumes a Strapi API")])])]),t._v(" "),a("h2",{attrs:{id:"using-a-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-a-template"}},[t._v("#")]),t._v(" Using a template")]),t._v(" "),a("p",[t._v("You can use a template when creating a project with "),a("code",[t._v("create-strapi-app")]),t._v(".")]),t._v(" "),a("Tabs",{attrs:{type:"border-card"}},[a("Tab",{attrs:{label:"yarn"}},[a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" create strapi-app my-project --template "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template-github-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])]),t._v(" "),a("Tab",{attrs:{label:"npx"}},[a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("npx create-strapi-app my-project --template "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template-github-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])],1),t._v(" "),a("p",[t._v("In these examples, the "),a("code",[t._v("template-github-name")]),t._v(" argument can have different forms:")]),t._v(" "),a("ul",[a("li",[t._v("A shorthand. If a Github user named "),a("code",[t._v("paul")]),t._v(" has a repository called "),a("code",[t._v("strapi-template-restaurant")]),t._v(", then the shorthand would be "),a("code",[t._v("paul/restaurant")]),t._v(". It only works if the repository's name starts with "),a("code",[t._v("strapi-template-")]),t._v(".")]),t._v(" "),a("li",[t._v("A URL. Just paste the URL of your GitHub repository. It works even if the repository is not prefixed by "),a("code",[t._v("strapi-template-")]),t._v(".")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("When using a shorthand, if the username is omitted, the CLI assumes it's "),a("code",[t._v("strapi")]),t._v(".")]),t._v(" "),a("p",[t._v("So the following commands are equivalent:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Shorthand")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" create strapi-app my-project --template strapi/blog\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Shorthand with username omitted since it defaults to strapi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" create strapi-app my-project --template blog\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Full GitHub URL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" create strapi-app my-project --template https://github.com/strapi/strapi-template-blog\n")])])])]),t._v(" "),a("p",[t._v("You can use the "),a("code",[t._v("--template")]),t._v(" option in combination with all other "),a("code",[t._v("create-strapi-app")]),t._v(" options, like "),a("code",[t._v("--quickstart")]),t._v(" or "),a("code",[t._v("--no-run")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"creating-a-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-template"}},[t._v("#")]),t._v(" Creating a template")]),t._v(" "),a("p",[t._v("To create a Strapi template, you need to publish a public GitHub repository that follows some rules.")]),t._v(" "),a("p",[t._v("First, a template's only concern should be to adapt Strapi to a use case. It should not deal with environment-specific configs, like databases, or upload and email providers. This is to make sure that templates stay maintainable, and to avoid conflicts with other CLI options like "),a("code",[t._v("--quickstart")]),t._v(".")]),t._v(" "),a("p",[t._v("Second, a template must follow the following file structure.")]),t._v(" "),a("h3",{attrs:{id:"file-structure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-structure"}},[t._v("#")]),t._v(" File structure")]),t._v(" "),a("p",[t._v("You can add as many files as you want to the root of your template repository. But it must at least have "),a("code",[t._v("template")]),t._v(" directory, and either a "),a("code",[t._v("template.json")]),t._v(" or a "),a("code",[t._v("template.js")]),t._v(" file.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("template.json")]),t._v(" is used to extend the Strapi app's default "),a("code",[t._v("package.json")]),t._v(". You can put all the properties that should overwrite the default "),a("code",[t._v("package.json")]),t._v(" in a root "),a("code",[t._v("package")]),t._v(" property. For example, a "),a("code",[t._v("template.json")]),t._v(" might look like this:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"package"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dependencies"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"strapi-plugin-graphql"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"latest"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"custom"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node ./scripts/custom.js"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("You can also use a "),a("code",[t._v("template.js")]),t._v(" file instead of the "),a("code",[t._v("template.json")]),t._v(" file. It should export a function that returns an object with the same properties. It's useful when our properties need to have dynamic values. For example, we can use it to make sure that a template requires the latest version of a Strapi plugin:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("scope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      dependencies"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'strapi-plugin-graphql'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strapiVersion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The "),a("code",[t._v("template")]),t._v(" directory is where you can extend the file contents of a Strapi project. All the children are optional, you should only include the files that will overwrite the default Strapi app.")]),t._v(" "),a("p",[t._v("Only the following contents are allowed inside the "),a("code",[t._v("template")]),t._v(" directory:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("README.md")]),t._v(": the readme of an app made with this template")]),t._v(" "),a("li",[a("code",[t._v(".env.example")]),t._v(": to specify required environment variables")]),t._v(" "),a("li",[a("code",[t._v("api/")]),t._v(": for collections and single types")]),t._v(" "),a("li",[a("code",[t._v("components/")]),t._v(" for components")]),t._v(" "),a("li",[a("code",[t._v("config/")]),t._v(" can only include the "),a("code",[t._v("functions")]),t._v(" directory (things like "),a("code",[t._v("bootstrap.js")]),t._v(" or "),a("code",[t._v("404.js")]),t._v("), because other config files are environment-specific.")]),t._v(" "),a("li",[a("code",[t._v("data/")]),t._v(" to store the data imported by a seed script")]),t._v(" "),a("li",[a("code",[t._v("plugins/")]),t._v(" for custom Strapi plugins")]),t._v(" "),a("li",[a("code",[t._v("public/")]),t._v(" to serve files")]),t._v(" "),a("li",[a("code",[t._v("scripts/")]),t._v(" for custom scripts")])]),t._v(" "),a("p",[t._v("If any unexpected file or directory is found, the installation will crash.")]),t._v(" "),a("h3",{attrs:{id:"step-by-step"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-by-step"}},[t._v("#")]),t._v(" Step by step")]),t._v(" "),a("p",[t._v("After reading the above rules, follow these steps to create your template:")]),t._v(" "),a("ol",[a("li",[t._v("Create a standard Strapi app with "),a("code",[t._v("create-strapi-app")]),t._v(", using the "),a("code",[t._v("--quickstart")]),t._v(" option.")]),t._v(" "),a("li",[t._v("Customize your app to match the needs of your use case.")]),t._v(" "),a("li",[t._v("Outside of Strapi, create a new directory for your template.")]),t._v(" "),a("li",[t._v("Create a "),a("code",[t._v("template.json")]),t._v(" file in your template directory.")]),t._v(" "),a("li",[t._v("If you have modified your app's "),a("code",[t._v("package.json")]),t._v(", include these changes (and "),a("em",[t._v("only")]),t._v(" these changes) in "),a("code",[t._v("template.json")]),t._v(" in a "),a("code",[t._v("package")]),t._v(" property. Otherwise, leave it as an empty object.")]),t._v(" "),a("li",[t._v("Create a "),a("code",[t._v("/template")]),t._v(" subdirectory.")]),t._v(" "),a("li",[t._v("Think of all the files you have modified in your app, and copy them to the "),a("code",[t._v("/template")]),t._v(" directory")]),t._v(" "),a("li",[t._v("Publish the root template project on GitHub. Make sure that the repository is public, and that the code is on the "),a("code",[t._v("master")]),t._v(" branch.")])])],1)}),[],!1,null,null,null);e.default=o.exports}}]);